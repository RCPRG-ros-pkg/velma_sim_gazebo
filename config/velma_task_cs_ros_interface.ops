import("rtt_ros");
import("rtt_roscomm");
import("rtt_rosparam");
require("os")

ros.import("rtt_rospack")
ros.import("rtt_actionlib");
ros.import("rtt_barrett_hand_controller_msgs");
ros.import("barrett_hand_move_action");

ros.import("eigen_typekit");
ros.import("rtt_control_msgs");
ros.import("rtt_rosclock");
ros.import("controller_common");
ros.import("velma_controller");
ros.import("rtt_cartesian_trajectory_msgs");
ros.import("rtt_std_msgs");
ros.import("rtt_tf");
ros.import("port_operations")
ros.import("force_control");
ros.import("rtt_force_control_msgs");

ros.import("rtt_velma_core_cs_task_cs_msgs");

//------------------------------------------------------------------------------
//-- ROS Command interface
//------------------------------------------------------------------------------

## load cartesian trajectory action
loadComponent("CartImpActionRight", "CartImpActionVelma");
#setActivityOnCPU("CartImpActionRight", 0.01, 1, ORO_SCHED_RT, 0);
CartImpActionRight.configure();
CartImpActionRight.loadService("actionlib")
CartImpActionRight.actionlib.connect("/right_arm/cartesian_trajectory")
connect("CartImpActionRight.cart_pose_command_OUTPORT", "velma_core_cs_task_cs_msgs_CommandConcate.cart_r_pose_INPORT", ConnPolicy())
connect("CartImpActionRight.cart_tool_command_OUTPORT", "velma_core_cs_task_cs_msgs_CommandConcate.cart_r_tool_INPORT", ConnPolicy())
connect("CartImpActionRight.cart_imp_command_OUTPORT", "velma_core_cs_task_cs_msgs_CommandConcate.cart_r_imp_INPORT", ConnPolicy())
connect("velma_core_cs_task_cs_msgs_StatusSplit.rCart_status_OUTPORT", "CartImpActionRight.generator_status_INPORT", ConnPolicy())
stream("CartImpActionRight.cart_pose_command_OUTPORT", ros.comm.topic("/velma_task_cs_ros_interface/CartImpActionRight/cart_pose_command_OUTPORT"));

loadComponent("CartImpActionLeft", "CartImpActionVelma");
#setActivityOnCPU("CartImpActionLeft", 0.01, 1, ORO_SCHED_RT, 0);
CartImpActionLeft.configure();
CartImpActionLeft.loadService("actionlib")
CartImpActionLeft.actionlib.connect("/left_arm/cartesian_trajectory")
connect("CartImpActionLeft.cart_pose_command_OUTPORT", "velma_core_cs_task_cs_msgs_CommandConcate.cart_l_pose_INPORT", ConnPolicy())
connect("CartImpActionLeft.cart_tool_command_OUTPORT", "velma_core_cs_task_cs_msgs_CommandConcate.cart_l_tool_INPORT", ConnPolicy())
connect("CartImpActionLeft.cart_imp_command_OUTPORT", "velma_core_cs_task_cs_msgs_CommandConcate.cart_l_imp_INPORT", ConnPolicy())
connect("velma_core_cs_task_cs_msgs_StatusSplit.lCart_status_OUTPORT", "CartImpActionLeft.generator_status_INPORT", ConnPolicy())
stream("CartImpActionLeft.cart_pose_command_OUTPORT", ros.comm.topic("/velma_task_cs_ros_interface/CartImpActionLeft/cart_pose_command_OUTPORT"));


#stream("velma_core_cs_task_cs_msgs_CommandConcate.msg_OUTPORT", ros.comm.topic("/velma_task_cs_ros_interface/velma_core_cs_task_cs_msgs_CommandConcate/msg_OUTPORT"));


loadComponent("q_splitAll", "VectorSplit15_2_8_8");
loadComponent("dq_splitAll", "VectorSplit15_2_8_8");

connect("velma_core_cs_task_cs_msgs_StatusSplit.q_OUTPORT", "q_splitAll.In", ConnPolicy());
connect("velma_core_cs_task_cs_msgs_StatusSplit.dq_OUTPORT", "dq_splitAll.In", ConnPolicy());




loadComponent("JntImpAction", "InternalSpaceSplineTrajectoryActionVelmaBody");
JntImpAction.loadService("rosparam");
JntImpAction.rosparam.getAll();
JntImpAction.configure();
JntImpAction.loadService("actionlib")
JntImpAction.actionlib.connect("/spline_trajectory_action_joint")
connect("JntImpAction.jnt_OUTPORT", "velma_core_cs_task_cs_msgs_CommandConcate.jnt_INPORT", ConnPolicy())
connect("q_splitAll.Out0", "JntImpAction.JointPosition_INPORT", ConnPolicy())
connect("velma_core_cs_task_cs_msgs_StatusSplit.jnt_q_desired_OUTPORT", "JntImpAction.JointPositionCommand_INPORT", ConnPolicy())
connect("velma_core_cs_task_cs_msgs_StatusSplit.jnt_status_OUTPORT", "JntImpAction.generator_status_INPORT", ConnPolicy())

q_splitAll.configure();
dq_splitAll.configure();

loadComponent("JntPub", "JointStatePublisher33");
JntPub.loadService("rosparam");
JntPub.rosparam.getAll();

connect("velma_core_cs_task_cs_msgs_StatusSplit.q_OUTPORT", "JntPub.JointPosition", ConnPolicy());
connect("velma_core_cs_task_cs_msgs_StatusSplit.dq_OUTPORT", "JntPub.JointVelocity", ConnPolicy());
//connect("TODO", "JntPub.JointEffort", ConnPolicy());

stream("JntPub.joint_state", ros.comm.topic("/joint_states"));

JntPub.configure();

q_splitAll.start();
dq_splitAll.start();
CartImpActionRight.start();
CartImpActionLeft.start();
JntImpAction.start();
JntPub.start();

