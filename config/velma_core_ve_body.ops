#ros.import("rtt_rosclock");
ros.import("rtt_barrett_hand_controller_msgs");
ros.import("rtt_geometry_msgs");
ros.import("rtt_velma_core_cs_ve_body_msgs");
ros.import("rtt_velma_core_cs_ve_body_subsystem_ports");
ros.import("velma_core_ve_body");
ros.import("rtt_velma_core_ve_body_re_body_msgs");
ros.import("rtt_velma_core_ve_body_re_body_subsystem_ports");

ros.import("eigen_typekit");
ros.import("rtt_std_msgs");
ros.import("port_operations");

ros.import("rtt_control_msgs");
ros.import("lwr_fri");
ros.import("velma_controller");
ros.import("rtt_cartesian_trajectory_msgs");
ros.import("rtt_std_msgs");
ros.import("rtt_tf");
ros.import("velma_sim_gazebo");

//------------------------------------------------------------------------------
//-- Simulation interface
//------------------------------------------------------------------------------

bool useSimulationTime()   { return true; }

TorsoSim.loadService("rosparam");
TorsoSim.rosparam.getAll();

if (!TorsoSim.configure()) then {
    kickOutAll();
}

#setActivityOnCPU("LWRrSim", 0.001, 6, ORO_SCHED_RT, 3)
#setActivity("LWRrSim", 0.001, 6, ORO_SCHED_RT)
setActivity("LWRrSim", 0, 6, ORO_SCHED_RT)
#LWRrSim.loadService("sim_clock_activity")
LWRrSim.loadService("rosparam")
LWRrSim.rosparam.getAll()
LWRrSim.configure()

#setActivityOnCPU("LWRlSim", 0.001, 6, ORO_SCHED_RT, 3)
#setActivity("LWRlSim", 0.001, 6, ORO_SCHED_RT)
setActivity("LWRlSim", 0, 6, ORO_SCHED_RT)
#LWRlSim.loadService("sim_clock_activity")
LWRlSim.loadService("rosparam")
LWRlSim.rosparam.getAll()
LWRlSim.configure()

setActivity("RightHandTactile", 0, 6, ORO_SCHED_RT)
RightHandTactile.loadService("rosparam")
RightHandTactile.rosparam.getAll()
RightHandTactile.configure()

#stream("RightHandTactile.BHPressureState_OUTPORT", ros.comm.topic("/right_hand/BHPressureState"))
#stream("RightHandTactile.calibrate_tactile_sensors_INPORT", ros.comm.topic("/right_hand/calibrate_tactile_sensors"))
#stream("RightHandTactile.set_median_filter_INPORT", ros.comm.topic("/right_hand/set_median_filter"))
#stream("RightHandTactile.tactile_info_OUTPORT", ros.comm.topic("/right_hand/tactile_info_out"))
//connect("RightHandTactile.max_measured_pressure_OUTPORT", "Hand.max_measured_pressure_in", ConnPolicy());

setActivity("LeftHandOptoforce", 0, 6, ORO_SCHED_RT)
LeftHandOptoforce.loadService("rosparam")
LeftHandOptoforce.rosparam.getAll()
LeftHandOptoforce.configure()

// TODO: uncomment
//stream("LeftHandOptoforce.force_0_OUTPORT", ros.comm.topic("/left_hand/optoforce/force_0"))
//stream("LeftHandOptoforce.force_1_OUTPORT", ros.comm.topic("/left_hand/optoforce/force_1"))
//stream("LeftHandOptoforce.force_2_OUTPORT", ros.comm.topic("/left_hand/optoforce/force_2"))

setActivity("RightHand", 0, 6, ORO_SCHED_RT)
RightHand.loadService("rosparam")
RightHand.rosparam.getAll()
RightHand.configure()

setActivity("LeftHand", 0, 6, ORO_SCHED_RT)
LeftHand.loadService("rosparam")
LeftHand.rosparam.getAll()
LeftHand.configure()

// F/T sensors

setActivity("LeftFtSensor", 0, 6, ORO_SCHED_RT)
LeftFtSensor.loadService("rosparam")
LeftFtSensor.rosparam.getAll()
LeftFtSensor.configure()
#stream("LeftFtSensor.rawWrench_OUTPORT", ros.comm.topic("/left_arm/ft_sensor/wrench"))

setActivity("RightFtSensor", 0, 6, ORO_SCHED_RT)
RightFtSensor.loadService("rosparam")
RightFtSensor.rosparam.getAll()
RightFtSensor.configure()
#stream("RightFtSensor.rawWrench_OUTPORT", ros.comm.topic("/right_arm/ft_sensor/wrench"))
#stream("RightFtSensor.fastFilteredWrench_OUTPORT", ros.comm.topic("/right_arm/ft_sensor/wrench_fast"))
#stream("RightFtSensor.slowFilteredWrench_OUTPORT", ros.comm.topic("/right_arm/ft_sensor/wrench_slow"))



loadComponent("bypass","velma_core_ve_body_types::BypassComponent")
#setActivity("bypass", 0, 5, ORO_SCHED_RT);
#bypass.configure()

loadComponent("safe","velma_core_ve_body_types::SafeComponent");
#setActivity("safe", 0, 5, ORO_SCHED_RT);
#safe.loadService("rosparam");
#safe.rosparam.getAll();
#safe.configure();

loadComponent("packet_counter", "velma_core_ve_body_types::PacketCounterComponent");
packet_counter.configure();

#
# command
#
stream("velma_core_ve_body_re_body_msgs_StatusConcate.msg_OUTPORT", ros.comm.topic("/velma_core_ve_body/velma_core_ve_body_re_body_msgs_Status"))

stream("master_component.velma_core_cs_ve_body_msgs_Command_OUTPORT", ros.comm.topic("/velma_core_ve_body/velma_core_cs_ve_body_msgs_Command"))

connect("velma_core_ve_body_re_body_msgs_StatusConcate.msg_OUTPORT", "safe.status_INPORT", ConnPolicy());
connect("safe.cmd_OUTPORT", "velma_core_ve_body_re_body_msgs_CommandConcate._INPORT", ConnPolicy());
connect("safe.sc_OUTPORT", "velma_core_cs_ve_body_msgs_StatusConcate.sc_INPORT", ConnPolicy());

# TODO: connect all ports of velma_core_ve_body_re_body_msgs_CommandSplit
#loadComponent("DataConversionToEigenVector4_rArm_t", "DataConversionToEigenVector4");
#packet_counter.configure();

connect("velma_core_ve_body_re_body_msgs_CommandSplit.rArm_t_OUTPORT",            "LWRrSim.JointTorqueCommand_INPORT", ConnPolicy());
connect("velma_core_ve_body_re_body_msgs_CommandSplit.rArmFri_OUTPORT",           "LWRrSim.KRL_CMD_INPORT", ConnPolicy());

connect("velma_core_ve_body_re_body_msgs_CommandSplit.lArm_t_OUTPORT",            "LWRlSim.JointTorqueCommand_INPORT", ConnPolicy());
connect("velma_core_ve_body_re_body_msgs_CommandSplit.lArmFri_OUTPORT",           "LWRlSim.KRL_CMD_INPORT", ConnPolicy());

connect("velma_core_ve_body_re_body_msgs_CommandSplit.tMotor_i_OUTPORT",           "TorsoSim.t_MotorCurrentCommand_INPORT", ConnPolicy())
connect("velma_core_ve_body_re_body_msgs_CommandSplit.hpMotor_i_OUTPORT",          "TorsoSim.head_pan_motor_current_command_INPORT", ConnPolicy())
connect("velma_core_ve_body_re_body_msgs_CommandSplit.htMotor_i_OUTPORT",          "TorsoSim.head_tilt_motor_current_command_INPORT", ConnPolicy())
connect("velma_core_ve_body_re_body_msgs_CommandSplit.hpMotor_q_OUTPORT",          "TorsoSim.head_pan_motor_position_command_INPORT", ConnPolicy())
connect("velma_core_ve_body_re_body_msgs_CommandSplit.htMotor_q_OUTPORT",          "TorsoSim.head_tilt_motor_position_command_INPORT", ConnPolicy())
connect("velma_core_ve_body_re_body_msgs_CommandSplit.hpMotor_dq_OUTPORT",         "TorsoSim.head_pan_motor_velocity_command_INPORT", ConnPolicy())
connect("velma_core_ve_body_re_body_msgs_CommandSplit.htMotor_dq_OUTPORT",         "TorsoSim.head_tilt_motor_velocity_command_INPORT", ConnPolicy())

connect("master_component.velma_core_cs_ve_body_msgs_Command_OUTPORT", "bypass.command_INPORT", ConnPolicy())
connect("bypass.command_OUTPORT", "velma_core_ve_body_re_body_msgs_CommandConcate._INPORT", ConnPolicy())
connect("bypass.sc_OUTPORT", "velma_core_cs_ve_body_msgs_StatusConcate.sc_INPORT", ConnPolicy());

#
# status concate for velma_core_cs_ve_body_msgs_
#
connect("packet_counter.packet_counter_OUTPORT",            "velma_core_cs_ve_body_msgs_StatusConcate.test_INPORT", ConnPolicy())

connect("LWRrSim.JointPosition_OUTPORT",                    "velma_core_cs_ve_body_msgs_StatusConcate.rArm_q_INPORT", ConnPolicy())
connect("LWRrSim.JointVelocity_OUTPORT",                    "velma_core_cs_ve_body_msgs_StatusConcate.rArm_dq_INPORT", ConnPolicy())
connect("LWRrSim.JointTorque_OUTPORT",                      "velma_core_cs_ve_body_msgs_StatusConcate.rArm_t_INPORT", ConnPolicy())
connect("LWRrSim.GravityTorque_OUTPORT",                    "velma_core_cs_ve_body_msgs_StatusConcate.rArm_gt_INPORT", ConnPolicy())
connect("LWRrSim.CartesianWrench_OUTPORT",                  "velma_core_cs_ve_body_msgs_StatusConcate.rArm_w_INPORT", ConnPolicy())
connect("LWRrSim.MassMatrix_OUTPORT",                       "velma_core_cs_ve_body_msgs_StatusConcate.rArm_mmx_INPORT", ConnPolicy())

connect("RightHand.q_OUTPORT",                              "velma_core_cs_ve_body_msgs_StatusConcate.rHand_q_INPORT", ConnPolicy())
connect("RightHand.status_OUTPORT",                         "velma_core_cs_ve_body_msgs_StatusConcate.rHand_s_INPORT", ConnPolicy())

connect("LWRlSim.JointPosition_OUTPORT",                    "velma_core_cs_ve_body_msgs_StatusConcate.lArm_q_INPORT", ConnPolicy())
connect("LWRlSim.JointVelocity_OUTPORT",                    "velma_core_cs_ve_body_msgs_StatusConcate.lArm_dq_INPORT", ConnPolicy())
connect("LWRlSim.JointTorque_OUTPORT",                      "velma_core_cs_ve_body_msgs_StatusConcate.lArm_t_INPORT", ConnPolicy())
connect("LWRlSim.GravityTorque_OUTPORT",                    "velma_core_cs_ve_body_msgs_StatusConcate.lArm_gt_INPORT", ConnPolicy())
connect("LWRlSim.CartesianWrench_OUTPORT",                  "velma_core_cs_ve_body_msgs_StatusConcate.lArm_w_INPORT", ConnPolicy())
connect("LWRlSim.MassMatrix_OUTPORT",                       "velma_core_cs_ve_body_msgs_StatusConcate.lArm_mmx_INPORT", ConnPolicy())

connect("LeftHand.q_OUTPORT",                               "velma_core_cs_ve_body_msgs_StatusConcate.lHand_q_INPORT", ConnPolicy())
connect("LeftHand.status_OUTPORT",                          "velma_core_cs_ve_body_msgs_StatusConcate.lHand_s_INPORT", ConnPolicy())

connect("TorsoSim.t_MotorPosition_OUTPORT",                 "velma_core_cs_ve_body_msgs_StatusConcate.tMotor_q_INPORT", ConnPolicy())
connect("TorsoSim.t_MotorVelocity_OUTPORT",                 "velma_core_cs_ve_body_msgs_StatusConcate.tMotor_dq_INPORT", ConnPolicy())
connect("TorsoSim.head_pan_motor_position_OUTPORT",         "velma_core_cs_ve_body_msgs_StatusConcate.hpMotor_q_INPORT", ConnPolicy())
connect("TorsoSim.head_pan_motor_velocity_OUTPORT",         "velma_core_cs_ve_body_msgs_StatusConcate.hpMotor_dq_INPORT", ConnPolicy())
connect("TorsoSim.head_tilt_motor_position_OUTPORT",        "velma_core_cs_ve_body_msgs_StatusConcate.htMotor_q_INPORT", ConnPolicy())
connect("TorsoSim.head_tilt_motor_velocity_OUTPORT",        "velma_core_cs_ve_body_msgs_StatusConcate.htMotor_dq_INPORT", ConnPolicy())
connect("RightHandTactile.BHPressureState_OUTPORT",         "velma_core_cs_ve_body_msgs_StatusConcate.rHand_p_INPORT", ConnPolicy())
connect("LeftHandOptoforce.force_OUTPORT",                  "velma_core_cs_ve_body_msgs_StatusConcate.lHand_f_INPORT", ConnPolicy())

connect("RightFtSensor.rawWrench_OUTPORT",                  "velma_core_cs_ve_body_msgs_StatusConcate.rFt_rw_INPORT", ConnPolicy())
connect("RightFtSensor.fastFilteredWrench_OUTPORT",         "velma_core_cs_ve_body_msgs_StatusConcate.rFt_ffw_INPORT", ConnPolicy())
connect("RightFtSensor.slowFilteredWrench_OUTPORT",         "velma_core_cs_ve_body_msgs_StatusConcate.rFt_sfw_INPORT", ConnPolicy())
connect("LeftFtSensor.rawWrench_OUTPORT",                   "velma_core_cs_ve_body_msgs_StatusConcate.lFt_rw_INPORT", ConnPolicy())
connect("LeftFtSensor.fastFilteredWrench_OUTPORT",          "velma_core_cs_ve_body_msgs_StatusConcate.lFt_ffw_INPORT", ConnPolicy())
connect("LeftFtSensor.slowFilteredWrench_OUTPORT",          "velma_core_cs_ve_body_msgs_StatusConcate.lFt_sfw_INPORT", ConnPolicy())


#
# status concate for master_component and other components
#
connect("LWRrSim.JointPosition_OUTPORT",                    "velma_core_ve_body_re_body_msgs_StatusConcate.rArm_q_INPORT", ConnPolicy())
connect("LWRrSim.JointVelocity_OUTPORT",                    "velma_core_ve_body_re_body_msgs_StatusConcate.rArm_dq_INPORT", ConnPolicy())
connect("LWRrSim.JointTorque_OUTPORT",                      "velma_core_ve_body_re_body_msgs_StatusConcate.rArm_t_INPORT", ConnPolicy())
connect("LWRrSim.GravityTorque_OUTPORT",                    "velma_core_ve_body_re_body_msgs_StatusConcate.rArm_gt_INPORT", ConnPolicy())
connect("LWRrSim.CartesianWrench_OUTPORT",                  "velma_core_ve_body_re_body_msgs_StatusConcate.rArm_w_INPORT", ConnPolicy())
connect("LWRrSim.MassMatrix_OUTPORT",                       "velma_core_ve_body_re_body_msgs_StatusConcate.rArm_mmx_INPORT", ConnPolicy())
connect("LWRrSim.FRIState_OUTPORT",                         "velma_core_ve_body_re_body_msgs_StatusConcate.rArmFriIntf_INPORT", ConnPolicy())
connect("LWRrSim.RobotState_OUTPORT",                       "velma_core_ve_body_re_body_msgs_StatusConcate.rArmFriRobot_INPORT", ConnPolicy())

connect("RightHand.q_OUTPORT",                              "velma_core_ve_body_re_body_msgs_StatusConcate.rHand_q_INPORT", ConnPolicy())
connect("RightHand.status_OUTPORT",                         "velma_core_ve_body_re_body_msgs_StatusConcate.rHand_s_INPORT", ConnPolicy())

connect("LWRlSim.JointPosition_OUTPORT",                    "velma_core_ve_body_re_body_msgs_StatusConcate.lArm_q_INPORT", ConnPolicy())
connect("LWRlSim.JointVelocity_OUTPORT",                    "velma_core_ve_body_re_body_msgs_StatusConcate.lArm_dq_INPORT", ConnPolicy())
connect("LWRlSim.JointTorque_OUTPORT",                      "velma_core_ve_body_re_body_msgs_StatusConcate.lArm_t_INPORT", ConnPolicy())
connect("LWRlSim.GravityTorque_OUTPORT",                    "velma_core_ve_body_re_body_msgs_StatusConcate.lArm_gt_INPORT", ConnPolicy())
connect("LWRlSim.CartesianWrench_OUTPORT",                  "velma_core_ve_body_re_body_msgs_StatusConcate.lArm_w_INPORT", ConnPolicy())
connect("LWRlSim.MassMatrix_OUTPORT",                       "velma_core_ve_body_re_body_msgs_StatusConcate.lArm_mmx_INPORT", ConnPolicy())
connect("LWRlSim.FRIState_OUTPORT",                         "velma_core_ve_body_re_body_msgs_StatusConcate.lArmFriIntf_INPORT", ConnPolicy())
connect("LWRlSim.RobotState_OUTPORT",                       "velma_core_ve_body_re_body_msgs_StatusConcate.lArmFriRobot_INPORT", ConnPolicy())

connect("LeftHand.q_OUTPORT",                               "velma_core_ve_body_re_body_msgs_StatusConcate.lHand_q_INPORT", ConnPolicy())
connect("LeftHand.status_OUTPORT",                          "velma_core_ve_body_re_body_msgs_StatusConcate.lHand_s_INPORT", ConnPolicy())

connect("TorsoSim.t_MotorPosition_OUTPORT",                 "velma_core_ve_body_re_body_msgs_StatusConcate.tMotor_q_INPORT", ConnPolicy())
connect("TorsoSim.t_MotorVelocity_OUTPORT",                 "velma_core_ve_body_re_body_msgs_StatusConcate.tMotor_dq_INPORT", ConnPolicy())
connect("TorsoSim.head_pan_motor_position_OUTPORT",         "velma_core_ve_body_re_body_msgs_StatusConcate.hpMotor_q_INPORT", ConnPolicy())
connect("TorsoSim.head_pan_motor_velocity_OUTPORT",         "velma_core_ve_body_re_body_msgs_StatusConcate.hpMotor_dq_INPORT", ConnPolicy())
connect("TorsoSim.head_tilt_motor_position_OUTPORT",        "velma_core_ve_body_re_body_msgs_StatusConcate.htMotor_q_INPORT", ConnPolicy())
connect("TorsoSim.head_tilt_motor_velocity_OUTPORT",        "velma_core_ve_body_re_body_msgs_StatusConcate.htMotor_dq_INPORT", ConnPolicy())
connect("RightHandTactile.BHPressureState_OUTPORT",         "velma_core_ve_body_re_body_msgs_StatusConcate.rHand_p_INPORT", ConnPolicy())
connect("LeftHandOptoforce.force_OUTPORT",                  "velma_core_ve_body_re_body_msgs_StatusConcate.lHand_f_INPORT", ConnPolicy())

connect("RightFtSensor.rawWrench_OUTPORT",                  "velma_core_ve_body_re_body_msgs_StatusConcate.rFt_rw_INPORT", ConnPolicy())
connect("RightFtSensor.fastFilteredWrench_OUTPORT",         "velma_core_ve_body_re_body_msgs_StatusConcate.rFt_ffw_INPORT", ConnPolicy())
connect("RightFtSensor.slowFilteredWrench_OUTPORT",         "velma_core_ve_body_re_body_msgs_StatusConcate.rFt_sfw_INPORT", ConnPolicy())
connect("LeftFtSensor.rawWrench_OUTPORT",                   "velma_core_ve_body_re_body_msgs_StatusConcate.lFt_rw_INPORT", ConnPolicy())
connect("LeftFtSensor.fastFilteredWrench_OUTPORT",          "velma_core_ve_body_re_body_msgs_StatusConcate.lFt_ffw_INPORT", ConnPolicy())
connect("LeftFtSensor.slowFilteredWrench_OUTPORT",          "velma_core_ve_body_re_body_msgs_StatusConcate.lFt_sfw_INPORT", ConnPolicy())


TorsoSim.start();
LWRrSim.start();
LWRlSim.start();
RightHandTactile.start();
LeftHandOptoforce.start();
RightHand.start();
LeftHand.start();
LeftFtSensor.start();
RightFtSensor.start();
packet_counter.start();

