<subsystem_definition>

    <ports>
        <in alias="b_st"    type="velma_core_cs_ve_body_msgs::Status"     side="bottom"   ipc="true" >
            <trigger min="0.0008" avg="0.001" max="0.0012" sim_max="1.0" />
        </in>
        <out alias="b_cmd"  type="velma_core_cs_ve_body_msgs::Command"    side="bottom"   ipc="true"/>

        <in alias="cmd"     type="velma_core_cs_task_cs_msgs::Command"    side="top"      ipc="true" />
        <out alias="st"     type="velma_core_cs_task_cs_msgs::Status"     side="top"      ipc="true"/>
    </ports>

    <errors>
        <err name="COMPONENT" />
        <err name="VE_BODY_SAFE" />
        <err name="VE_BODY_ST_INV" />
    </errors>

    <predicates>
        <predicate name="veBodyInSafeState" />
        <predicate name="veBodyStatusValid" />
        <predicate name="recvCartImpCmd" />
        <predicate name="recvJntImpCmd" />
        <predicate name="recvOneCmd" />
        <predicate name="inSelfCollision" />
    </predicates>

    <output_scopes>
        <scope name="upper_body" />
        <scope name="right_hand" />
        <scope name="left_hand" />
        <scope name="neck" />
    </output_scopes>

    <behaviors>

        <behavior name="position_hands_neck"
            init_cond="veBodyStatusValid and (not veBodyInSafeState)"
            stop_cond="veBodyStatusValid and veBodyInSafeState"
            err_cond="FALSE" >
            <running_component name="JTG_head" />
            <running_component name="VL_hp" />
            <running_component name="VL_ht" />
            <running_component name="S_q_head" />
            <scope name="right_hand" />
            <scope name="left_hand" />
            <scope name="neck" />
        </behavior>

        <behavior name="idle" is_initial="true"
            init_cond="(not CURRENT_BEHAVIOR_OK) or (not veBodyStatusValid) or veBodyInSafeState"
            stop_cond="veBodyStatusValid and (not veBodyInSafeState)"
            err_cond="FALSE" >
            <running_component name="idle" />
            <running_component name="S_t_body" />
            <scope name="upper_body" />
            <scope name="right_hand" />
            <scope name="left_hand" />
            <scope name="neck" />
        </behavior>

        <behavior name="safe"
            init_cond="(not veBodyInSafeState) and veBodyStatusValid and (IN_ERROR or (not recvOneCmd) or inSelfCollision)"
            stop_cond="recvOneCmd"
            err_cond="(not CURRENT_BEHAVIOR_OK) or (not veBodyStatusValid) or veBodyInSafeState" >
            <running_component name="safe" />
            <running_component name="Mass" />
<!--            <running_component name="FK" />-->
            <running_component name="JntImp" />
            <running_component name="S_t_body" />
            <scope name="upper_body" />
        </behavior>

        <behavior name="cart_imp"
            init_cond="(not IN_ERROR) and recvOneCmd and recvCartImpCmd and veBodyStatusValid and (not veBodyInSafeState) and (not inSelfCollision)"
            stop_cond="veBodyStatusValid and recvOneCmd and (not recvCartImpCmd)"
            err_cond="(not CURRENT_BEHAVIOR_OK) or (not veBodyStatusValid) or (veBodyInSafeState) or inSelfCollision" >
            <running_component name="cart_imp" />
            <running_component name="CImp" />
            <running_component name="Mass" />
            <running_component name="JntLimit" />
            <running_component name="INT_pose_l" />
            <running_component name="INT_pose_r" />
            <running_component name="INT_tool_r" />
            <running_component name="INT_tool_l" />
            <running_component name="INT_imp_r" />
            <running_component name="INT_imp_l" />
            <running_component name="FK" />
            <running_component name="wcc_r" />
            <running_component name="wcc_l" />
            <running_component name="S_t_body" />
            <scope name="upper_body" />
        </behavior>

        <behavior name="jnt_imp"
            init_cond="(not IN_ERROR) and recvOneCmd and recvJntImpCmd and veBodyStatusValid and (not veBodyInSafeState) and (not inSelfCollision)"
            stop_cond="veBodyStatusValid and recvOneCmd and (not recvJntImpCmd)"
            err_cond="(not CURRENT_BEHAVIOR_OK) or (not veBodyStatusValid) or (veBodyInSafeState) or inSelfCollision" >
            <running_component name="jnt_imp" />
            <running_component name="Mass" />
            <running_component name="JTG_body" />
<!--            <running_component name="FK" />-->
            <running_component name="JntImp" />
            <running_component name="S_t_body" />
            <scope name="upper_body" />
        </behavior>
<!--
        <behavior name="fcl"
            init_cond="FALSE"
            stop_cond="TRUE"
            err_cond="(not CURRENT_BEHAVIOR_OK) or (not veBodyStatusValid) or (veBodyInSafeState) or inSelfCollision" >
            <running_component name="fcl" />
            <running_component name="CImp" />
            <running_component name="Mass" />
            <running_component name="JntLimit" />
            <running_component name="LeftForceControl" />
            <running_component name="RightForceControl" />
            <running_component name="LeftForceTransformation" />
            <running_component name="RightForceTransformation" />
            <running_component name="FK" />
            <scope name="upper_body" />
        </behavior>
-->
    </behaviors>

    <simulation use_ros_sim_clock="true" use_sim_clock="true" />

</subsystem_definition>
